"""
extract custom tags from strings, used to add instructions to blender objects, tested Godot 4

"""


static func tag_extract(input_string, open_symbol = '<', close_symbol = '>') -> Array:
    """
    takes an input string which might have many tags like
    "this is<tag> a sentance<end>"
    =>
    ["this is a sentance", "tag", "end"]
    
    this is used to extra hidden comman tags
    
    https://github.com/RichardEllicott/GodotSnippets/blob/master/code_patterns/tag_extract.gd
    """
    var nest = 0
    var open_brackets = false
    var text = ""
    var instructions = []
    var bracketed_text = ""
    
    for _char in input_string:
        if _char == open_symbol: ## when we open the brackets
            nest += 1
            if nest == 1:
                open_brackets = true
        elif _char == close_symbol: ## when we close the brackets
            nest -= 1
            if nest == 0:
                open_brackets = false
                instructions.append(bracketed_text)
                bracketed_text = ""
        else:
            if open_brackets:
                bracketed_text += _char
            else:
                text += _char
    return [text] + instructions
    




## regex version
var _tag_extract_regex: RegEx
func tag_extract2(input_string: String, open_symbol: String = '<', close_symbol: String = '>') -> Array[String]:
    
    if not _tag_extract_regex:
        var s = "%s(?<Rmk>[^<]*)%s" % [open_symbol, close_symbol]
        _tag_extract_regex = RegEx.new()
        _tag_extract_regex.compile(s)
    
    var results: Array[String] = []
    for result in _tag_extract_regex.search_all(input_string):
        results.push_back(result.get_string())
    return results
